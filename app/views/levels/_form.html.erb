<%= tinymce language: 'uk' %>

<div class="form-group row">
  <%= f.label :name, class: 'col-sm-2 col-form-label' %>
  <div class="col-sm-10">
    <%= f.text_field :name, class: 'form-control form-control-sm' %>
  </div>
</div>
<div class="form-group row">
  <%= f.label 'Олімпійка?', class: 'col-sm-2 col-form-label' %>
  <div class="col-sm-10 form-inline">
    <div class="form-check">
      <%= f.check_box :olymp, class: 'form-check-input' %>
    </div>
    <div id="olymp_base_block">
      <%= f.label :olymp_base, class: 'time-form-label col-form-label' %>
      <%= f.number_field :olymp_base, class: 'form-control form-control-sm', min: 2, max: 9 %>
    </div>
  </div>
</div>
<div class="form-group row">
  <%= f.label 'Автозавершення через ', class: 'col-sm-2 col-form-label' %>
  <div id="level-complete-later-form" class="col-sm-10 form-inline">
    <%= render 'shared/time_form' %>
    <%= f.hidden_field :complete_later %>
  </div>
</div>
<div class="form-group row">
  <%= f.label 'Умова для проходження', class: 'col-sm-2 col-form-label' %>
  <div class="col-sm-10">
    <div class="custom-control custom-radio custom-control-inline">
      <%= radio_button_tag(:condition, "all", true, class: "custom-control-input") %>
      <%= label_tag(:condition_all, "Закрити всі сектори", class: "custom-control-label") %>
    </div>
    <div class="custom-control custom-radio custom-control-inline">
      <%= radio_button_tag(:condition, "selected", true, class: "custom-control-input") %>
      <%= label_tag(:condition_selected, "Закрити", class: "custom-control-label") %>
      <%= f.number_field :sectors_for_close, min: 0, max: @level.questions.count, class: 'form-control form-control-sm' %>
      <div class="col-sm-6">
        <label class="col-form-label">секторів</label>
      </div>
    </div>
  </div>
</div>
<div class="form-group row">
  <%= f.label :is_autocomplete_penalty, class: 'col-sm-2 col-form-label' %>
  <div id="level-autocomplete-penalty-form" class="col-sm-10 form-inline">
    <div class="form-check">
      <%= f.check_box :is_autocomplete_penalty %>
    </div>
    <%= render 'shared/time_form' %>
    <%= f.number_field :autocomplete_penalty, hidden: true %>
  </div>
</div>
<div class="form-group row">
  <%= f.label :is_wrong_code_penalty, class: 'col-sm-2 col-form-label' %>
  <div id="level-wrong-code-penalty-form" class="col-sm-10 form-inline">
    <div class="form-check">
      <%= f.check_box :is_wrong_code_penalty %>
    </div>
    <%= render 'shared/time_form' %>
    <%= f.number_field :wrong_code_penalty, hidden: true %>
  </div>
</div>

<script type="text/javascript">
    $( document ).ready(function() {
        if (!$('#level_olymp').prop("checked")) {
            $('#olymp_base_block').addClass('invisible');
        }

        if (!$('#level_is_autocomplete_penalty').prop("checked")) {
            $('#level-autocomplete-penalty-form .my-time-form').addClass('invisible');
        }

        if (!$('#level_is_wrong_code_penalty').prop("checked")) {
            $('#level-wrong-code-penalty-form .my-time-form').addClass('invisible');
        }

        var sectors_for_close = $('#level_sectors_for_close');
        if (sectors_for_close.val() == 0) {
            $("#condition_all").prop("checked", true);
            sectors_for_close.prop('readonly', true);
        } else {
            $("#condition_selected").prop("checked", true);
            sectors_for_close.prop('readonly', false);
        }

        set_time_form(parseInt($('#level_complete_later').val()), '#level-complete-later-form');
        set_time_form(parseInt($('#level_autocomplete_penalty').val()), '#level-autocomplete-penalty-form');
        set_time_form(parseInt($('#level_wrong_code_penalty').val()), '#level-wrong-code-penalty-form');

        $('#level-complete-later-form .time-hours').on('change', function () {
            set_field_time('#level_complete_later', '#level-complete-later-form', 1);
        });

        $('#level-complete-later-form .time-minutes').on('change', function () {
            set_field_time('#level_complete_later', '#level-complete-later-form', 1);
        });

        $('#level-complete-later-form .time-seconds').on('change', function () {
            set_field_time('#level_complete_later', '#level-complete-later-form', 1);
        });

        $('#level-autocomplete-penalty-form .time-hours').on('change', function () {
            set_field_time('#level_autocomplete_penalty', '#level-autocomplete-penalty-form', 1);
        });

        $('#level-autocomplete-penalty-form .time-minutes').on('change', function () {
            set_field_time('#level_autocomplete_penalty', '#level-autocomplete-penalty-form', 1);
        });

        $('#level-autocomplete-penalty-form .time-seconds').on('change', function () {
            set_field_time('#level_autocomplete_penalty', '#level-autocomplete-penalty-form', 1);
        });

        $('#level-wrong-code-penalty-form .time-hours').on('change', function () {
            set_field_time('#level_wrong_code_penalty', '#level-wrong-code-penalty-form', 1);
        });

        $('#level-wrong-code-penalty-form .time-minutes').on('change', function () {
            set_field_time('#level_wrong_code_penalty', '#level-wrong-code-penalty-form', 1);
        });

        $('#level-wrong-code-penalty-form .time-seconds').on('change', function () {
            set_field_time('#level_wrong_code_penalty', '#level-wrong-code-penalty-form', 1);
        });

        $('#level_olymp').on("click", function () {
            toggle($('#level_olymp'));
        });

        $('input[type="radio"]').on('change', function () {
            var sectors_for_close = $('#level_sectors_for_close');
            if ($("#condition_all").prop("checked")) {
                sectors_for_close.prop('readonly', true);
                sectors_for_close.val(0);
            } else {
                sectors_for_close.prop('readonly', false);
                sectors_for_close.select();
                sectors_for_close.val(<%= @level.questions.count %>);
            }
        });

        $('#level_is_autocomplete_penalty').on('click', function () {
            if ($('#level_is_autocomplete_penalty').prop("checked")) {
                $('#level-autocomplete-penalty-form .my-time-form').removeClass('invisible');
            } else {
                set_time_form(0, '#level-autocomplete-penalty-form');
                $('#level_autocomplete_penalty').val(0);
                $('#level-autocomplete-penalty-form .my-time-form').addClass('invisible');
            }
        });

        $('#level_is_wrong_code_penalty').on('click', function () {
            if ($('#level_is_wrong_code_penalty').prop("checked")) {
                $('#level-wrong-code-penalty-form .my-time-form').removeClass('invisible');
            } else {
                set_time_form(0, '#level-wrong-code-penalty-form');
                $('#level_wrong_code_penalty').val(0);
                $('#level-wrong-code-penalty-form .my-time-form').addClass('invisible');
            }
        });
    });

    function toggle(elem) {
        if (elem.prop("checked")) {
            $('#olymp_base_block').removeClass('invisible');
            $('#level_olymp_base').focus();
        } else {
            $('#olymp_base_block').addClass('invisible');
        }
    }
</script>